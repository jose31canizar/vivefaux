"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","3715520c61755f9dbd329b5741e6b0d5"],["static/js/main.d0149bb9.js","4fb11255f911de8f84924dd2b750addc"],["static/media/1.1f8766a3.jpg","1f8766a39631fb3f609dee5ebaa9fc7a"],["static/media/5.7617b28c.jpg","7617b28c72e123472154b78940ec73e0"],["static/media/7.aeb4813f.jpg","aeb4813f00a5b46011995d012f5ee8f2"],["static/media/8.68e81cc0.jpg","68e81cc089cc31d838ef5fda8d21eba7"],["static/media/AnoRegular-Regular.07d41c05.woff2","07d41c05777a4ed59f3b0875a1d7df1d"],["static/media/AnoRegular-Regular.25b37a1d.woff","25b37a1da6eaf8847f19d3b407d89976"],["static/media/AnoRegular-Regular.36e000c2.eot","36e000c22e228f65a1f9dc7ca47acdd4"],["static/media/AnoRegular-Regular.5ebad178.otf","5ebad178318e24a621b721eacca4ff0c"],["static/media/AnoRegular-Regular.bcc58bd9.ttf","bcc58bd92927fa937446cbd6e5f83878"],["static/media/Avenir.3992490a.eot","3992490af44e1d70835c697f4e0f607b"],["static/media/Avenir.b3b06989.otf","b3b06989cdbd59e51633319a5be7851b"],["static/media/Gotham.0b28710a.ttf","0b28710a605aed91211bd25a19081bae"],["static/media/Gotham.31389ba2.eot","31389ba2d243c6656a2db89c7c3f2faa"],["static/media/avenir.121208aa.ttf","121208aa798efb637c32949acd54b3db"],["static/media/avenir.3b8ea8b2.woff2","3b8ea8b28180074d95d28ade82cb7311"],["static/media/avenir.7c6098c3.woff","7c6098c31f8e9e76689fd92dbbe15678"],["static/media/gotham.05efd073.woff","05efd073a24290be3859f0db8316e675"],["static/media/gotham.49169099.otf","491690995b618360dff6122a7bf19332"],["static/media/gotham.c422ae90.woff2","c422ae9079940cd4ae6555e6db1b7eaa"],["static/media/kamakura_vivefaux.e2b72921.svg","e2b729217eb04490d1997aad4c4b2dde"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});